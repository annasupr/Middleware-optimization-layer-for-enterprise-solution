### Tomcat
server.port: 8585

### Spring Security
security:
  enable:
    csrf: false
logging:
  level:
    org:
      springframework:
        security: DEBUG

### Service API
service.api:
  major.version: v0
  version: 0.0.1
  title: ${spring.application.name}
  selector: /**
  docket.custom: true
  description: Middleware optimization layer is a proxy for maintaining stable server part for all underlying backend systems

### SpringDoc settings
springdoc.swagger-ui.disable-swagger-default-url: true

spring:
  main:
    allow-circular-references: true
  application:
    name: Middleware optimization layer for enterprise solution
  ### DB
  datasource:
    url: jdbc:postgresql://localhost:5432/diploma_db
    driverClassName: org.postgresql.Driver
    username: dbuser
    password: dbuser
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    defer-datasource-initialization: false
    hibernate.ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate.jdbc.lob.non_contextual_creation: true
  ### Redis
  data:
    redis:
      port: 6379
      password: password
      host: localhost

#  ### Liquibase Migration Tool
#  liquibase:
#    change-log: classpath:db/changelog/db.changelog-master.yaml
#    parameters:
#      schema-name: public

#full-text search
hibernate.search.default:
  directory_provider: filesystem
  indexBase: /data/index/default

### App configs
#mail.ru
app:
  server:
    basePath: http://localhost:${server.port}
# Pagination
  pagination:
    defaultPageValue: 0
    defaultPageSize: 10
# JWT
  jwtSecret: bWlkZGxld2FyZUFwcFNlY3JldEtleTExMTIyMjMzMw==
  jwtExpirationMs: 86400000
# Services URLs
  services:
    customerServiceUrl: http://localhost:8584
    orderServiceUrl: http://localhost:8583
    catalogServiceUrl: http://localhost:8582

### Circuit breaker config
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
resilience4j:
  circuitbreaker:
    configs:
      shared:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count_based
    instances:
      orderService:
        base-config: shared
  retry:
    instances:
      orderService:
        max-attempts: 5
        wait-duration: 10s
  ratelimiter:
    instances:
      orderService:
        register-health-indicator: false
        limit-for-period: 10
        limit-refresh-period: 10s
        timeout-duration: 3s
    metrics:
      legacy:
        enabled: true
      enabled: true

### Opentracing
opentracing:
  jaeger:
    http-sender:
      url: http://localhost:14268/api/traces
    udp-sender:
      ### udp host for sender. By default, Jaeger libraries use a UDP sender to report finished spans to the jaeger-agent daemon
      host: localhost
      ### udp port
      port: 6831
    ### logs the spans in console
    log-spans: true